// any graphic element
.graphic(@rules) {
	>svg,>img,>picture,>.global_icon-dom { @rules(); }
}

.font-family_mono {
	font-family: 'PT Mono';
	white-space: pre;
}

.font-variant(huge) {
	@set-family: Poppins;
	@set-size: 23px;
}

.font-variant(big) {
	@set-family: Poppins;
	@set-size: 16px;
	@set-weight: 400;
}

.font-variant(regular) {
	@set-family: Poppins;
	@set-size: 14px;
	@set-weight: 400;
}

.font-variant(tiny) {
	@set-family: Poppins;
	@set-size: 11px;
}

.font-variant(mono) {
	@set-family: 'PT Mono';
	@set-size: 14px;
}

.font-variant(mono-tiny) {
	@set-family: 'PT Mono';
	@set-size: 11px;
}

.font(@variant, @weight: 0, @size: 0) {
	@default-family: Poppins;
	@default-weight: 400;
	@default-size: 12px;

	.font-variant(@variant);

	font-family: if(isdefined(@set-family), @set-family, @default-family);

	// --debug-set-size: @set-size;
	// --debug-size: @size;
	// --debug-set-family: if(isdefined(@set-family), @set-family, undef);
	// --debug-default-family: @default-family;
	// --debug-variant: @variant;

	font-weight: if(not(@weight = 0), @weight,
		if(isdefined(@set-weight), @set-weight, @default-weight));

	font-size: if(not(@size = 0), @size,
		if(isdefined(@set-size), @set-size, @default-size));
}


.inherit(@var-name) {
	--proxy@{var-name}: var(@var-name);

	&* {
		@{var-name}: ~'var(--proxy@{var-name})';
	}
}


.style-svelte-select() {
	--height: var(--ui-row-height);
	--background: var(--theme-color-border);
	--border: 1px solid transparent;

	--border-radius: 8px;
	--input-color: var(--theme-color-text-light);
	--placeholder-color: var(--theme-color-graysoft);

	--font-size: 13px;

	--border-focus-color: var(--theme-color-primary);

	--chevron-color: var(--theme-color-primary);
	--indicator-color: var(--theme-color-primary);

	--list-shadow: -1px 3px 7px 0 rgba(0, 0, 0, 0.8);

	--list-max-height: 500px;
	--list-background: fade(@theme-color-graydark, 97%);
	--list-border-radius: var(--ui-border-radius);

	--item-hover-bg: black;
	--item-is-active-bg: rgba(0,0,0,0.6);

	--clear-select-color: var(--theme-color-graymed);
	--clear-select-focus-color: var(--theme-color-graymed);
	--clear-select-hover-color: var(--theme-color-graymed);

	--selected-item-overflow: visible;

	.item.active {
		:global(&) {
			outline: 1px solid var(--theme-color-primary);
		}
	}

	.svelte-select-list {
		:global(&) {
			padding-top: 2px;
			padding-bottom: 2px;
		}
	}
}


.hide-scrollbar() {
	scrollbar-width: none;

	&::-webkit-scrollbar {
		display: none;
	}

	&::-webkit-scrollbar-track {
		display: none;
	}

	&::-webkit-scrollbar-thumb {
		background-color: rgba(0, 0, 0, 0.2);
	}
}


.absolute(@dims: ''; @from: left) {
	position: absolute;
	top: 0;
	@{from}: 0;

	width: if('' = @dims, var(--app-window-width), @dims);
	height: if('' = @dims, var(--app-window-height), @dims);
}


.high-contrast-selection(@mode) {
	user-select: @mode;

	&::selection {
		color: black;
		background-color: white;
	}
}

.fill-available() {
	width: 100%;
	width: -moz-available;
	width: -webkit-fill-available;
	width: fill-available;
}

.pulse() {
	animation: pulse 1s ease-in-out infinite;
}
